# services/gemini_service.py
import logging
import re
import google.generativeai as genai

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –∫–æ–Ω—Ñ—ñ–≥
from config_reader import config

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ª–æ–≥–µ—Ä
logger = logging.getLogger(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–æ–¥–µ–ª—å –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –º–æ–¥—É–ª—è
model = None
if config.gemini_api_key:
    try:
        genai.configure(api_key=config.gemini_api_key)
        model = genai.GenerativeModel('gemini-1.5-flash')
        logger.info("‚úÖ –°–µ—Ä–≤—ñ—Å Gemini AI —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ.")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Gemini AI: {e}")
else:
    logger.warning("‚ö†Ô∏è GEMINI_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª AI –±—É–¥–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.")


async def rewrite_post_text(original_text: str) -> str:
    """
    –ü–µ—Ä–µ–ø–∏—Å—É—î —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Gemini AI, –∑–±–µ—Ä—ñ–≥–∞—é—á–∏ –∞—Ä—Ç–∏–∫—É–ª.
    –Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞, –ø–æ–≤–µ—Ä—Ç–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç.
    """
    if not model:
        logger.warning("–°–ø—Ä–æ–±–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ Gemini AI, –∞–ª–µ —Å–µ—Ä–≤—ñ—Å –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ.")
        return original_text

    # 1. –í–∏—Ç—è–≥—É—î–º–æ –∞—Ä—Ç–∏–∫—É–ª –∑ —Ç–µ–∫—Å—Ç—É, —â–æ–± –≤—ñ–Ω –Ω–µ –∑–∞–≥—É–±–∏–≤—Å—è
    sku_match = re.search(r'–ê—Ä—Ç–∏–∫—É–ª: (\S+)', original_text)
    sku = sku_match.group(1) if sku_match else None
    
    # –í–∞—à —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —Ç–∞ –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—Ä–æ–º–ø—Ç
    prompt = f"""
        –ü–µ—Ä–µ–ø–∏—à–∏ —Ü–µ–π –ø–æ—Å—Ç –¥–ª—è Telegram-–∫–∞–Ω–∞–ª—É, —è–∫–∏–π –ø—Ä–æ–¥–∞—î —Ç–∞–∫—Ç–∏—á–Ω–∏–π –æ–¥—è–≥ —Ç–∞ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è.
        –°—Ç–∏–ª—å: –≤–ø–µ–≤–Ω–µ–Ω–∏–π, —Ç—Ä–æ—Ö–∏ –∞–≥—Ä–µ—Å–∏–≤–Ω–∏–π, –ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∏–π.
        –í–∏–º–æ–≥–∏:
        1. –ó–±–µ—Ä–µ–∂–∏ –∫–ª—é—á–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–æ–≤–∞—Ä.
        2. –î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —Ç–µ–º–∞—Ç–∏—Ü—ñ (üî•, üá∫üá¶, üí™, üéØ, ‚úÖ).
        3. –°—Ç—Ä—É–∫—Ç—É—Ä—É–π —Ç–µ–∫—Å—Ç: –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, —Ü—ñ–Ω–∞.
        4. –ù–µ –≤–∏–≥–∞–¥—É–π –Ω—ñ—á–æ–≥–æ, —á–æ–≥–æ –Ω–µ–º–∞—î –≤ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ.
        5. –î—É–∂–µ –≤–∞–∂–ª–∏–≤–æ: –ù–ï –ó–ú–Ü–ù–Æ–ô —ñ –Ω–µ –∑–≥–∞–¥—É–π –ê–†–¢–ò–ö–£–õ —É —Å–≤–æ—ó–π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
        6. –¢–µ–∫—Å—Ç –º–∞—î –±—É—Ç–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.

        –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç:
        ---
        {original_text}
        ---
        """

    try:
        response = await model.generate_content_async(prompt)
        rewritten_text = response.text

        # 2. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∞—Ä—Ç–∏–∫—É–ª –Ω–∞ –º—ñ—Å—Ü–µ, —è–∫—â–æ –≤—ñ–Ω –±—É–≤ –∑–Ω–∞–π–¥–µ–Ω–∏–π
        if sku:
            # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ "–ê—Ä—Ç–∏–∫—É–ª:" –≤–∂–µ —î, —è–∫—â–æ –Ω—ñ - –¥–æ–¥–∞—î–º–æ
            if "–ê—Ä—Ç–∏–∫—É–ª:" not in rewritten_text:
                 rewritten_text += f"\n\n–ê—Ä—Ç–∏–∫—É–ª: {sku}"

        logger.info(f"–¢–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å—Ç–∞ –∑ –∞—Ä—Ç–∏–∫—É–ª–æ–º {sku} —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–æ.")
        return rewritten_text.strip()

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –∑ Gemini AI: {e}")
        # –£ —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç, —â–æ–± –Ω–µ –∑—É–ø–∏–Ω—è—Ç–∏ —Ä–æ–±–æ—Ç—É
        return original_text