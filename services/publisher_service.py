import logging
import re
import io
from telethon.tl.types import Message
from aiogram import Bot
from aiogram.types import InputFile, InlineKeyboardMarkup, InlineKeyboardButton

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—ñ –Ω–∞—à—ñ —Å–µ—Ä–≤—ñ—Å–∏ —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥
from config_reader import config
from services import gemini_service, xml_parser, gdrive_service

logger = logging.getLogger(__name__)

def _extract_sku(text: str) -> str | None:
    """–ù–∞–¥—ñ–π–Ω–æ –≤–∏—Ç—è–≥—É—î –∞—Ä—Ç–∏–∫—É–ª –∑ —Ç–µ–∫—Å—Ç—É –ø–æ—Å—Ç–∞."""
    match = re.search(r'(?i)(–ê—Ä—Ç–∏–∫—É–ª|–ö–æ–¥|–ê—Ä—Ç|SKU):\s*(\S+)', text)
    if match:
        return match.group(2).strip()
    return None

def _create_order_button(sku: str) -> InlineKeyboardMarkup:
    """
    –°—Ç–≤–æ—Ä—é—î "–º–∞–≥—ñ—á–Ω—É" –∫–Ω–æ–ø–∫—É "–ó–∞–º–æ–≤–∏—Ç–∏", —è–∫–∞ –≤–µ–¥–µ –≤ –±–æ—Ç
    —ñ –æ–¥—Ä–∞–∑—É –ø–æ–∫–∞–∑—É—î —Ç–æ–≤–∞—Ä –∑–∞ –∞—Ä—Ç–∏–∫—É–ª–æ–º (deep link).
    """
    # –§–æ—Ä–º—É—î–º–æ URL: https://t.me/YourBotUsername?start=SKU
    bot_url = f"https://t.me/{config.bot_username}?start={sku}"
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üõí –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–æ–≤–∞—Ä", url=bot_url)]
        ]
    )
    return keyboard

async def process_and_publish_post(bot: Bot, telethon_message: Message):
    """
    –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è. –ü—Ä–∏–π–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ Telethon, –æ–±—Ä–æ–±–ª—è—î
    –π–æ–≥–æ —ñ –ø—É–±–ª—ñ–∫—É—î –≤ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ Aiogram.
    """
    if not telethon_message.text or not telethon_message.photo:
        logger.info("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ —Ç–µ–∫—Å—Ç—É –∞–±–æ —Ñ–æ—Ç–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ.")
        return

    original_text = telethon_message.text
    sku = _extract_sku(original_text)

    if not sku:
        logger.warning(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∞—Ä—Ç–∏–∫—É–ª –≤ –ø–æ—Å—Ç—ñ: {original_text[:50]}...")
        return
        
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∏–π —Ç–æ–≤–∞—Ä –≤ –Ω–∞—à—ñ–π –±–∞–∑—ñ (XML)
    product_data = await xml_parser.get_product_by_sku(sku)
    if not product_data:
        logger.warning(f"–¢–æ–≤–∞—Ä –∑ –∞—Ä—Ç–∏–∫—É–ª–æ–º {sku} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ XML-—Ñ–∞–π–ª—ñ. –ü–æ—Å—Ç –Ω–µ –±—É–¥–µ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ.")
        return

    logger.info(f"–û–±—Ä–æ–±–∫–∞ –ø–æ—Å—Ç–∞ –∑ –∞—Ä—Ç–∏–∫—É–ª–æ–º {sku}...")

    # 1. –ü–µ—Ä–µ–ø–∏—Å—É—î–º–æ —Ç–µ–∫—Å—Ç
    rewritten_text = await gemini_service.rewrite_post_text(original_text)

    # 2. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–æ—Ç–æ –≤ –ø–∞–º'—è—Ç—å
    image_bytes = io.BytesIO()
    await telethon_message.download_media(file=image_bytes)
    image_bytes.seek(0)
    photo_to_send = InputFile(image_bytes)
    
    # 3. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É "–ó–∞–º–æ–≤–∏—Ç–∏"
    order_keyboard = _create_order_button(sku)

    # 4. –ü—É–±–ª—ñ–∫—É—î–º–æ –≤ –æ—Å–Ω–æ–≤–Ω–∏–π –∫–∞–Ω–∞–ª
    try:
        await bot.send_photo(
            chat_id=config.main_channel,
            photo=photo_to_send,
            caption=rewritten_text,
            reply_markup=order_keyboard
        )
        logger.info(f"‚úÖ –ü–æ—Å—Ç –∑ –∞—Ä—Ç–∏–∫—É–ª–æ–º {sku} —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –≤ {config.main_channel}.")
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –ø–æ—Å—Ç–∞ –∑ –∞—Ä—Ç–∏–∫—É–ª–æ–º {sku}: {e}")
        return

    # 5. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞ Google Drive (—è–∫—â–æ —É–≤—ñ–º–∫–Ω–µ–Ω–æ)
    if config.use_gdrive:
        image_bytes.seek(0) # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫—É—Ä—Å–æ—Ä –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —á–∏—Ç–∞–Ω–Ω—è
        await gdrive_service.save_post_to_drive(rewritten_text, image_bytes.read(), sku)
